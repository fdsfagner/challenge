{
	"info": {
		"_postman_id": "bbbda25e-ee0b-4177-b7c2-5861299f696a",
		"name": "Challenge",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Get balance for non-existing account",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "cd543224-92a8-489c-9855-d9179facaaa4",
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Body matches string\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"0\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/balance?account_id=100",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"balance"
					],
					"query": [
						{
							"key": "account_id",
							"value": "100"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create account with initial balance",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "23c49952-167f-46ee-94d8-06eb866c9358",
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Response must be valid and have a body\", function () {",
							"     pm.response.to.be.withBody;",
							"     pm.response.to.be.json;",
							"    ",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"type\":\"deposit\",\r\n   \"destination\":\"100\",\r\n   \"amount\":10\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/event",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"event"
					]
				}
			},
			"response": []
		},
		{
			"name": "Deposit into existing account",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "99b02060-7d94-4545-bc24-558b5f2e23ea",
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Response must be valid and have a body\", function () {",
							"     pm.response.to.be.withBody;",
							"     pm.response.to.be.json;",
							"    ",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"type\":\"deposit\",\r\n   \"destination\":\"100\",\r\n   \"amount\":10\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/event",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"event"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get balance for existing account",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "cd443f6d-a1a0-42f6-9008-36a64ebc075f",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/balance?account_id=100",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"balance"
					],
					"query": [
						{
							"key": "account_id",
							"value": "100"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Withdraw from non-existing account",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"type\":\"withdraw\",\r\n   \"origin\":\"200\",\r\n   \"amount\":10\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/event",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"event"
					]
				}
			},
			"response": []
		},
		{
			"name": "Withdraw from existing account",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "618e78bc-1a7e-403f-b1b5-9209c850f14d",
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Response must be valid and have a body\", function () {",
							"     pm.response.to.be.withBody;",
							"     pm.response.to.be.json;",
							"    ",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"type\":\"withdraw\",\r\n   \"origin\":\"100\",\r\n   \"amount\":5\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/event",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"event"
					]
				}
			},
			"response": []
		},
		{
			"name": "Transfer from existing account",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"type\":\"transfer\",\r\n   \"origin\":\"100\",\r\n   \"amount\":15,\r\n   \"destination\":\"300\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/event",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"event"
					]
				}
			},
			"response": []
		},
		{
			"name": "Transfer from non-existing account",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"type\":\"transfer\",\r\n   \"origin\":\"200\",\r\n   \"amount\":15,\r\n   \"destination\":\"300\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/event",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"event"
					]
				}
			},
			"response": []
		},
		{
			"name": "Reset state before starting tests",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7476bb89-e77d-450f-977e-4ea8e3896c1a",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Body matches string\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"OK\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/reset",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"reset"
					]
				}
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}